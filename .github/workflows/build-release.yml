name: Build-Release

on:
  push:
    tags:
      - 'v*'

env:
  GIT_TAG: ${{ github.event.inputs.tag }}

jobs:
  nuget:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build -c Release -p:Version=${{ env.GIT_TAG }}
      - run: dotnet test -c Release -p:Version=${{ env.GIT_TAG }}

      - run: dotnet pack ./CSharpZxScript/CSharpZxScript.csproj -c Release --no-build -p:Version=${{ env.GIT_TAG }} -o ./nuget
      
        # Create Release
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GIT_TAG }}
          release_name: Ver.${{ env.GIT_TAG }}
          draft: true
          prerelease: false

        # Upload to NuGet
      - run: dotnet nuget push "./nuget/*.nupkg" -s https://www.nuget.org/api/v2/package -k ${{ secrets.NUGET_KEY }}
