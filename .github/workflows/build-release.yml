name: Build-Release

on:
  push:
    tags:
      - '*'
      
jobs:
  nuget:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/checkout@v2

      - name: Set version
        id: version
        run: |
          REPOSITORY=$(echo ${{ github.repository }} | sed -e "s#.*/##")
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo ::set-output name=version::$VERSION
          echo ::set-output name=filename::$REPOSITORY-$VERSION
      
      - run: dotnet build -c Release -p:Version=${{ steps.version.outputs.version }}
      - run: dotnet test -c Release -p:Version=${{ steps.version.outputs.version }}

      - run: dotnet pack ./CSharpZxScript/CSharpZxScript.csproj -c Release --no-build -p:Version=${{ steps.version.outputs.version }} -o ./nuget
      
        # Create Release
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Ver.${{ steps.version.outputs.version }}
          draft: true
          prerelease: false

        # Upload to NuGet
      - run: dotnet nuget push "./nuget/*.nupkg" -s https://www.nuget.org/api/v2/package -k ${{ secrets.NUGET_KEY }}
